---
import { t } from '../i18n/translations';
import type { Language } from '../i18n/index';

export interface Props {
  title?: string;
  lang?: Language;
  canonical?: string;
}

const { title, lang = 'en', canonical } = Astro.props;
const currentLang = lang;
const translate = t(currentLang);

// 如果没有传入title，使用默认的翻译标题
const pageTitle = title || translate('page.title');

// 在开发模式下导入 toolbar
const isDev = import.meta.env.DEV;

// 语言到HTML lang属性的映射
const langMapping = {
  'zh-cn': 'zh-CN',
  'zh-tw': 'zh-TW',
  'en': 'en',
  'ja': 'ja'
} as const;
---

<!doctype html>
<html lang={langMapping[currentLang]}>
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={translate('page.description')} />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    {canonical && <link rel="canonical" href={canonical} />}
    <title>{pageTitle}</title>
    
    <!-- Google tag (gtag.js) -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-WG4ZKYY1L1"></script>
    <script is:inline>
      window.dataLayer = window.dataLayer || [];
      function gtag(){dataLayer.push(arguments);}
      gtag('js', new Date());

      gtag('config', 'G-WG4ZKYY1L1');
    </script>
  </head>
  <body class="bg-gray-50 dark:bg-gray-900 transition-colors duration-200">
    <slot />
    <script>
      // 主题切换功能
      function initTheme() {
        const theme = localStorage.getItem('theme') || 'light';
        document.documentElement.classList.toggle('dark', theme === 'dark');
      }
      
      function toggleTheme() {
        const isDark = document.documentElement.classList.contains('dark');
        const newTheme = isDark ? 'light' : 'dark';
        document.documentElement.classList.toggle('dark', newTheme === 'dark');
        localStorage.setItem('theme', newTheme);
      }
      
      // 初始化主题
      initTheme();
      
      // 全局主题切换函数
      (window as any).toggleTheme = toggleTheme;
    </script>
    
    <!-- 只在开发模式下加载 Stagewise Toolbar -->
    {isDev && <script src="/src/scripts/stagewise-init.js" type="module"></script>}
  </body>
</html> 